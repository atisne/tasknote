#!/bin/bash

###############################################################################
# tasknote - associate note file with individual tasks in taskwarrior
# 
# Copyright 2011, Alan Bowen, bowen@tcnj.edu.
# All rights reserved.
#
# based on taskopen - file based notes with taskwarrior
#
# Copyright 2010, Johannes Schlatow.
# All rights reserved.
#
# This program is free software; you can redistribute it and/or modify it under
# the terms of the GNU General Public License as published by the Free Software
# Foundation; either version 2 of the License, or (at your option) any later
# version.
#
# This program is distributed in the hope that it will be useful, but WITHOUT
# ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
# FOR A PARTICULAR PURPOSE.  See the GNU General Public License for more
# details.
#
# You should have received a copy of the GNU General Public License along with
# this program; if not, write to the
#
#     Free Software Foundation, Inc.,
#     51 Franklin Street, Fifth Floor,
#     Boston, MA
#     02110-1301
#     USA
#
###############################################################################

# Updated 2012, Michael Bobroski <bobroski@gmail.com>
# 	- Updated to work with Taskwarrior 2.0
# 	- View Note Feature
#	- Allow relative path for FOLDER

EDITOR=vim
TASKBIN=task
VIEWER=cat

# FOLDER to store notes in.
# If you sync tasks, FOLDER should be a location that syncs and is available to
# other computers, i.e. ~/dropbox/tasknotes
# by default, store them in the task data location
# feel free to change it
FOLDER="$( task _show | grep data\.location | cut -d '=' -f2 )/tasknotes"
# substitude ~ if data.location use it
FOLDER="${FOLDER/#~/$HOME}"

# Check for existence of $FOLDER
if [ ! -d "$FOLDER" ]; then
	echo    "Notes folder '$FOLDER' does not exist."
	echo -n "Shall I create it (y/n)? "
	read answer
	if [ $answer == "y" ]; then
	  echo "Creating '$FOLDER'."
	  mkdir -p "$FOLDER"
	else
	  echo "Did NOT create '$FOLDER'. Exiting."
	  exit 1
	fi
fi

# Preferred extension for tasknotes
EXT="txt"

# Display usage if task number not supplied on cli
if [ $# -lt 1 -o $# -gt 2 ]; then
  echo "Usage:"
  echo "  New/Edit note: $0 <id>"
  echo "  View note:     $0 <id> [v]iew"
  echo "  Delete note:   $0 <id> [d]elete"
  exit 1
fi

#find UUID from given task
uuid=`$TASKBIN $1 uuids`

# build full path & file name to store notes in
file="$FOLDER/$uuid.$EXT"

# determine if notes file already exists
fileexists=0
if [ -f "$file" ]; then
  fileexists=1
fi

# Display/remove note if requested and exit
if [ $# -gt 1 ]; then
  if [ $fileexists = 1 ]; then
      action=$2
      case $action in
          v|view)
              $SHELL -c "$VIEWER \"$file\""
              ;;
          d|delete)
              $SHELL -c "rm \"$file\""
              $SHELL -c "$TASKBIN $1 denotate \"[tasknote]\""
              ;;
      esac
  else
    echo "File not found"
  fi
  exit 1
fi

#create/edit $file with editor
$SHELL -c "$EDITOR \"$file\"" || exit 1

# Create a note message representing the first line of
# the edited note file.
if [ -s "$file" ]; then
  # build the note message protecting single quotes
  NOTEMSG="[tasknote] "$( head -1 "$file" | sed -e "s,','\"'\"',g" )
  # remove any previous annotation - we want only a single
  # tasknote annotation. Detection works through the
  # [tasknote] annotation prefix
  $SHELL -c "$TASKBIN $* denotate \"[tasknote]\""
  $SHELL -c "$TASKBIN $* annotate '$NOTEMSG'"
else
  [ -f "$file" ] && $SHELL -c "rm \"$file\""
fi

exit 0
